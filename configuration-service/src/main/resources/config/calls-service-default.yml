server:
  port: ${PORT:8083}

## PostgreSQL
spring:
  application:
    name: calls-service
    # ===============================
    # DATASOURCE
    # ===============================
    # Set here configurations for the database connection
    # Connection url for the database
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/video_calls
    username: ${JDBC_DATABASE_USERNAME:stand}
    password: ${JDBC_DATABASE_PASSWORD:stand}
    initialization-mode: always

    # Keep the connection alive if idle for a long time (needed in production)
    #spring.datasource.dbcp.test-while-idle=true
    #spring.datasource.dbcp.validation-query=SELECT 1
    # ===============================
    # JPA / HIBERNATE
    # ===============================
    # Use spring.jpa.properties.* for Hibernate native properties (the prefix is
    # stripped before adding them to the entity manager).
    # Show or not log for each sql query
  jpa:
    show-sql: true
    # Hibernate ddl auto (create, create-drop, update): with "update" the database
    # schema will be automatically updated accordingly to java entities found in
    # the project
    hibernate:
      ddl-auto: create-drop
    # Allows Hibernate to generate SQL optimized for a particular DBMS
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL95Dialect

#  flyway:
#    enabled: true
#    baseline-on-migrate: true